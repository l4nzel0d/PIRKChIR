@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

* {
    font-family: 'Poppins', sans-serif;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

:root {
    --background-color: #222732;
    --icon-container-radius: 50px;
    --icon-container-diameter: calc(2*var(--icon-container-radius));
    --icon-gradient-animation-timing: .5s;
    --card-skew-timing: .3s;
    --login-box-height: 25rem;
    --login-box-width: 25rem;
    --colorful-card-width: 200px;
    --border-light-card-width: 28vw;
    --border-light-card-max-width: 270px;
    --border-light-card-main-color: #0c002b;
    --border-light-card-secondary-color: #251a41;
    --border-light-card-moving-edge-color: #006aff;
    --border-light-card-edge-thickness: -5px;
    --border-light-card-transition-timing: .5s;
}

body {
    background-color: var(--background-color);
    display: flex;
    flex-direction: column;
    align-items: center;
}

main {
    margin-top: 10rem;
    margin-bottom: 10rem;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 10rem;
}

/* ICONS */

footer {
    display: flex;
    width: 100%;
    justify-content: center;
    bottom: 0;
}

.footer-container {
    width: 100%;
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin-bottom: 1rem;
}

.icon-container {
    cursor: pointer;
    height: var(--icon-container-diameter);
    width: var(--icon-container-diameter);
    border-radius: 50%;
    box-shadow: 0px 0px 20px;

    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;

    position: relative;

    transition: transform var(--icon-gradient-animation-timing) ease;
    
    z-index: 0;
}

.icon {
    width: 50%;
    object-fit: cover;
    filter: brightness(0) invert();
}

.icon-container::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: linear-gradient(
        to right bottom,
        #f4d224,
        #eb427b
    );
    transform: scale(.98); /* fixes edges bleeding out */

    z-index: -2;
}

.icon-container::after {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background-color);
    transition: transform var(--icon-gradient-animation-timing) ease;

    z-index: -1;

}

.icon-container:hover {
    transform: translateY(-20%);
}

.icon-container:hover::after {
    transform: translateY(100%);
}




/* CARDS */
.card-gallery {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin-bottom: 5rem;
}

#card1 {
    --color1: #ed1556;
    --color2: #f5b610;
}
#card2 {
    --color1: #ed0f65;
    --color2: #3e9bed;
}
#card3 {
    --color1: #44cbf4;
    --color2: #54fb0b;
}

.card-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    width: 19rem;
}

.card-content button {
    width: max-content;
    margin-top: .4rem;
    border-radius: 3px;
    border: none;
    font-weight: 700;
    padding: .5rem .5rem;
    cursor: pointer;
}

.card-content {
    display: flex;
    height: max-content;
    justify-content: space-between;
    padding: 1rem 2rem;
    flex-direction: column;
    align-items: flex-start;
    color: white;
    position: absolute;
    z-index: 2;
    background: rgba(255, 255, 255, 0.01);
    box-shadow: 0 25px 45px rgba(0, 0, 0, .1);
    backdrop-filter: blur(5px);
    border-radius: .5rem;
    transition: padding var(--card-skew-timing) ease;
}

.card-wrapper:hover .card-content {
    padding: 3.2rem 2rem;
}

.card {
    position: relative;
    width: 50%;
    height: 25rem;
    background: linear-gradient(135deg, var(--color1), var(--color2));
    border-radius: .5rem;
    transform-origin: 100% 100%;
    transform: skewX(10deg);
    transition: transform var(--card-skew-timing) ease;
    z-index: 0;
}

.card-wrapper:hover .card {
    transform: skewX(0);
}

.card::before {
    content: "";
    position: absolute;
    inset: 10px;
    background: inherit;
    border-radius: inherit;
    filter: blur(50px);
    z-index: -1;
}


.card-wrapper .square:nth-child(1) {
    position: absolute;
    width: 100px;
    height: 100px;
    z-index: 3;
    top: -28%;
    left: 10%;
    opacity: 0;
    transition: all calc(var(--card-skew-timing) + .2s) ease-out .1s;
}

.card-wrapper:hover .square:nth-child(1) {
    opacity: 1;
    top: -2%;
    left: 20%;
}
.card-wrapper .square:nth-child(2) {
    position: absolute;
    width: 100px;
    height: 100px;
    z-index: 3;
    bottom: -20%;
    right: 2%;
    opacity: 0;
    transition: all .5s ease-in-out;
}

.card-wrapper:hover .square:nth-child(2) {
    opacity: 1;
    bottom: -2%;
    right: 5%;
}








/* LOGIN */
.login-section * {
    border: none;
}

.login-box {
    position: relative;
}

.login-section {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    position: relative;
}

.login-form {
    width: var(--login-box-width);    
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: flex-start;
    padding: 3rem 2rem;
    gap: 1rem;
    z-index: 1;
}

.login-form, .square {
    background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 25px 45px rgba(0, 0, 0, .1);
    backdrop-filter: blur(5px);
    border-radius: .5rem;
}

.square {
    position: absolute;
}

.login-section .square:nth-child(1) {
    top: -50px;
    right: -60px;
    width: 100px;
    height: 100px;
    z-index: -1;
}
.login-section .square:nth-child(2) {
    top: 150px;
    left: -100px;
    width: 120px;
    height: 120px;
    z-index: 2;
}
.login-section .square:nth-child(3) {
    bottom: 50px;
    right: -60px;
    width: 80px;
    height: 80px;
    z-index: 2;
}
.login-section .square:nth-child(4) {
    bottom: -34px;
    left: 100px;
    width: 50px;
    height: 50px;
    z-index: -1;
}
.login-section .square:nth-child(5) {
    top: -80px;
    left: 140px;
    width: 60px;
    height: 60px;
}


.login-form h2 {
    color: white;
    position: relative;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
}

.login-form h2::after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: .2rem;
    background-color: white;
}

.login-form input {
    width: 100%;
    font-size: 1rem;
    padding: .5rem;
    border-radius: 30px;
    color: white;
    outline: none;
    background: rgba(255, 255, 255, 0.2);
    letter-spacing: 1px;
    box-shadow: inherit;
    padding: .5rem 1rem;
};

.login-form input::placeholder {
    color: white;
}

.login-form input[type="submit"] {
    cursor: pointer;
    max-width: fit-content;
    background: rgba(255, 255, 255, 0.7);
    font-weight: bold;
    color: #666666;
    font-size: 1rem;
    border-radius: 50px;
    padding: .5rem 1rem;
    box-shadow: inherit;
}


.login-links-block {
    color: white;
}

.login-links-block a {
    text-decoration: none;
    color: #ffa600;
}




/* COLORFUL CARDS */
.colorful-card-section
{
    background: linear-gradient(90deg, rgba(255,226,0,1) 0%, rgb(144, 0, 167) 100%);
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

#colorful-card1 {
    --top-color: #ffc107;
}

#colorful-card2 {
    --top-color: #e91e63;
}

#colorful-card3 {
    --top-color: #9c27b0;
}


.colorful-card-container {
    display: flex;
    width: 100%;
    justify-content: space-around;
    gap: 20px;
}

.colorful-card {
    width: var(--colorful-card-width);
    height: 300px;
    background-color: white;    
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, filter 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    overflow: hidden;
    position: relative;
}


.colorful-card::after {
    content: "";
    position: absolute;
    top: calc(-.65*var(--colorful-card-width));
    left: 50%;
    transform: translateX(-50%);
    width: calc(1.3*var(--colorful-card-width));
    height: calc(1.3*var(--colorful-card-width));
    border-radius: 50%;
    background-color: var(--top-color);
    z-index: 2; 
}


.colorful-card-content {
    text-align: center;
}

.colorful-card h2 {
    position: relative;
    font-size: 2.5rem;
    color: white;
    z-index: 3;
    margin-bottom: 6rem;
}

.colorful-card p {
    font-size: 0.9rem;
    color: #333;
    margin: 10px 0;
    padding: 0 10px;
}

.colorful-card button {
    position: relative;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    color: rgb(255, 255, 255);
    background-color: var(--top-color);
    cursor: pointer;
    overflow: hidden;
}

.colorful-card button:hover {
    transform: scale(1.05);
}


.colorful-card-container:hover .colorful-card {
    filter: blur(5px);
    transform: scale(0.9);
}

.colorful-card-container .colorful-card:hover {
    filter: blur(0);
    transform: scale(1.05);
    z-index: 1;
}






/* BORDER-LIGHT-CARDS */
.border-light-card-section {
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;    
}

.border-light-card-container {
    width: 100%;
    display: flex;
    justify-content: space-around;
}

.border-light-card-content {
    height: 50%;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    text-align: center;
    color: white;
    z-index: 3;
}

.border-light-card-content p,
.border-light-card-content h2 {
    z-index: inherit;
}

.border-light-card-button {
    width: max-content;
    border: none;
    text-transform: uppercase;
    font-weight: 700;
    padding: .5rem 1.5rem;
    transition: transform .1s ease;
}

.border-light-card-button:hover {
    cursor: pointer;
    transform: scale(1.05);
}

.border-light-card .card-number {
    position: absolute;
    color:var(--border-light-card-moving-edge-color);
    font-size: 4rem;
    top: 0;
    right: 10%;
    z-index: 2;
    transition: transform var(--border-light-card-transition-timing) ease-in-out;
} 

.border-light-card-container:hover .border-light-card:not(:hover) .card-number,
.border-light-card-container:not(:hover) .card-number {
    transform: translateY(100%);
    opacity: .4;
}

.border-light-card-wrapper {
    box-shadow: 0px 3px 10px 10px rgba(0, 0, 0, .3);
    transition: opacity var(--border-light-card-transition-timing) ease;
}

.border-light-card::after {
    transition: opacity calc(var(--border-light-card-transition-timing) + .6s) ease;
}

.border-light-card-wrapper:not(:hover) .border-light-card::after {
    opacity: 0;
}

.border-light-card {
    width: var(--border-light-card-width);
    max-width: var(--border-light-card-max-width);
    height: 360px;
    background: linear-gradient(
        to right,
        var(--border-light-card-secondary-color) 0% 50%,
        var(--border-light-card-main-color) 50% 100%
    );    
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: relative;
}


.border-light-card::before, .border-light-card::after {
    content: "";
    position: absolute;
    inset: var(--border-light-card-edge-thickness);
}

.border-light-card::after {
    background: repeating-conic-gradient(
        from var(--a),
        var(--border-light-card-moving-edge-color) 0%,
        var(--border-light-card-moving-edge-color) 5%,
        transparent 5%,
        transparent 40%,
        var(--border-light-card-moving-edge-color) 50%
    );
    z-index: -1;
    animation: animate 4s linear infinite;
}

.border-light-card::before {
    background: var(--border-light-card-main-color);
    z-index: -2;
}

.border-light-card-container:not(:hover) .border-light-card-wrapper {
    opacity: .7;
}

.border-light-card-container:hover .border-light-card-wrapper:not(:hover) {
    opacity: .3;
}

.border-light-card-wrapper:hover {
    opacity: 1;
}


@property --a {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}
@keyframes animate {
    0% {
        --a: 0deg;
    }
    100% {
        --a: 360deg;
    }
}